[workspace.package]
description = "An open source, black box re-implementation of the Jane's Fighters Anthology engine."
version = "0.0.3"
authors = ["Terrence Cole <terrence.d.cole@gmail.com>"]
edition = "2021"
rust-version = "1.64"
readme = "https://gitlab.com/terrence_too/openfa/-/blob/main/README.md"
homepage = "https://gitlab.com/terrence_too/openfa"
documentation = "https://gitlab.com/terrence_too/openfa"
repository = "https://gitlab.com/terrence_too/openfa"
license = "GPL-3.0-only"

[workspace]
members = [
    "apps/dump-lay",
    "apps/dump-lib",
    "apps/dump-m",
    "apps/dump-mm",
    "apps/dump-pal",
    "apps/dump-pe",
    "apps/dump-pic",
    "apps/dump-sh",
    "apps/dump-t2",
    "apps/dump-xt",
    "apps/pack-lib",
    # "apps/pack-pic",
    "apps/show-sh",

    # "libs/asset/dlg",
    "libs/asset/fnt",
    "libs/asset/jt",
    "libs/asset/lay",
    "libs/asset/lib",
    "libs/asset/mc",
    "libs/asset/mmm",
    "libs/asset/mnu",
    "libs/asset/nt",
    "libs/asset/ot",
    "libs/asset/pal",
    "libs/asset/pic",
    "libs/asset/pt",
    "libs/asset/sh",
    "libs/asset/t2",
    "libs/asset/xt",

    "libs/game/asset_loader",
    "libs/game/flight_dynamics",
    "libs/game/player",
    "libs/game/fa_vehicle",

    "libs/wgpu-buffer/font_fnt",
    "libs/wgpu-buffer/instrument_envelope",
    "libs/wgpu-buffer/ofa_groups",
    "libs/wgpu-buffer/pic_uploader",
    "libs/wgpu-buffer/shape",
    "libs/wgpu-buffer/t2_terrain",

    "libs/util/i386",
    "libs/util/lzss",
    "libs/util/peff",
    "libs/util/pkware",
    "libs/util/reverse",
]

[workspace.dependencies]
# nitrogen deps
anyhow = { version = "^ 1", features = ["backtrace"] }
approx = "^ 0.5"
bevy_ecs = { version = "^ 0.8", features = ["trace"] }
bevy_tasks = "^ 0.8"
bitflags = "^ 1"
bzip2 = "^ 0.4"
chrono = "^ 0.4"
console_error_panic_hook = "^ 0.1"
crossbeam = "^ 0.8"
csscolorparser = "^ 0.6"
ellipse = "^ 0.2"
env_logger = "^ 0.9"
float-ord = "^ 0.3"
futures = "^ 0.3"
futures-lite = "^ 1"
fxhash = "^ 0.2"
gilrs = "^ 0.9"
glob = "^ 0.3"
hashbag = "^ 0.1"
image = "^ 0.24"
itertools = "^ 0.10"
json = "^ 0.12"
lalrpop = "0.19.4"
lalrpop-util = { version = "^ 0.19", features = ["lexer"] }
lazy_static = "^ 1"
libc = "0.2"
log = "^ 0.4"
lyon_geom = "^ 0.17"
memmap = "^ 0.7"
memoffset = "^ 0.6"
naga = { version = "^ 0.8", features = ["spv-in", "spv-out", "dot-out", "glsl-in", "glsl-out", "glsl-validate"] }
nalgebra = "^ 0.31"
num = "^ 0.4"
num-traits = "^ 0.2"
once_cell = "^ 1"
ordered-float = "^ 3"
parking_lot = "^ 0.12"
paste = "^ 1"
platform-dirs = "^ 0.3"
pretty-type-name = "1.0"
proc-macro2 = "^ 1"
quote = "^ 1"
rand = "^ 0.8"
raw-window-handle = "^ 0.4"
rayon = "^ 1.5"
regex = "^ 1"
rusttype = "^ 0.9"
shaderc = "^ 0.8"
simba = { version = "^ 0.7", default-features = false }
smallvec = "^ 1"
spirv-reflect = "^ 0.2"
static_assertions = "^ 1"
strsim = "^ 0.10"
structopt = "^ 0.3"
syn = { version = "= 1.0.92", features = ["default", "extra-traits", "full", "visit"] }
terminal_size = "^ 0.1"
tracing = { version = "0.1", features = ["release_max_level_info"] }
tracing-subscriber = { version = "0.3.1", features = ["registry", "env-filter"] }
tracing-chrome = "0.4.0"
tracing-log = "0.1.2"
tracing-error = "0.2.0"
triggered = "^ 0.1"
unicase = "^ 2.6"
wasm-bindgen = "=0.2.82"
wasm-bindgen-futures = "=0.4.32"
web-sys = { version = "=0.3.59", features = ["console"] }
wgpu = { version = "^ 0.13", features = ["spirv"] }
winit = "^ 0.26"
zerocopy = "^ 0.6"
# openfa deps
byteorder = "^ 1"
codepage-437 = "^ 0.1"
humansize = "^ 2"
md5 = "^ 0.3"
thiserror = "^ 1"
triangulate = "^ 0.1"

# Emit debugging symbols for tracing
[profile.release]
debug = true

# Turn on a small amount of optimisation while developing, mostly targetted
# at triangulate, image, nalgebra and other packages that are artificially
# slow in debug builds. Note that we have to turn it on from _all_, not just
# dependencies because of inlining.
[profile.dev]
debug = true
debug-assertions = true
opt-level = 1

[package]
name = "openfa"
description = "An open source, black box re-implementation of the Jane's Fighters Anthology engine."
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
readme.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
license.workspace = true
exclude = []
include = []
keywords = ["aerospace", "emulation", "classic-gaming", "simulation"]
categories = ["aerospace", "emulation", "simulation"]

[dependencies]
anyhow.workspace = true
bevy_ecs.workspace = true
chrono.workspace = true
csscolorparser.workspace = true
env_logger.workspace = true
image.workspace = true
log.workspace = true
nalgebra.workspace = true
once_cell.workspace = true
ordered-float.workspace = true
platform-dirs.workspace = true
structopt.workspace = true
terminal_size.workspace = true
absolute_unit = { path = "libs/nitrogen/util/absolute_unit" }
animate = { path = "libs/nitrogen/sim/animate" }
asset_loader = { path = "libs/game/asset_loader" }
atmosphere = { path = "libs/nitrogen/wgpu-buffer/atmosphere" }
camera = { path = "libs/nitrogen/sim/camera" }
catalog = { path = "libs/nitrogen/system/catalog" }
composite = { path = "libs/nitrogen/wgpu-buffer/composite" }
event_mapper = { path = "libs/nitrogen/sim/event_mapper" }
fa_vehicle = { path = "libs/game/fa_vehicle" }
flight_dynamics = { path = "libs/game/flight_dynamics" }
fnt = { path = "libs/asset/fnt" }
font_fnt = { path = "libs/wgpu-buffer/font_fnt" }
fullscreen = { path = "libs/nitrogen/wgpu-buffer/fullscreen" }
geodesy = { path = "libs/nitrogen/util/geodesy" }
geometry = { path = "libs/nitrogen/util/geometry" }
global_data = { path = "libs/nitrogen/wgpu-buffer/global_data" }
gpu = { path = "libs/nitrogen/system/gpu" }
input = { path = "libs/nitrogen/system/input" }
instrument_envelope = { path = "libs/wgpu-buffer/instrument_envelope" }
lib = { path = "libs/asset/lib" }
marker = { path = "libs/nitrogen/wgpu-buffer/marker" }
measure = { path = "libs/nitrogen/sim/measure" }
mmm = { path = "libs/asset/mmm" }
nitrous = { path = "libs/nitrogen/util/nitrous" }
orrery = { path = "libs/nitrogen/sim/orrery" }
pal = { path = "libs/asset/pal" }
physical_constants = { path = "libs/nitrogen/util/physical_constants" }
player = { path = "libs/game/player" }
runtime = { path = "libs/nitrogen/util/runtime" }
shape = { path = "libs/wgpu-buffer/shape" }
stars = { path = "libs/nitrogen/wgpu-buffer/stars" }
t2_terrain = { path = "libs/wgpu-buffer/t2_terrain" }
terrain = { path = "libs/nitrogen/wgpu-buffer/terrain" }
tracelog = { path = "libs/nitrogen/system/tracelog" }
ui = { path = "libs/nitrogen/wgpu-buffer/ui" }
vehicle = { path = "libs/nitrogen/sim/vehicle" }
widget = { path = "libs/nitrogen/wgpu-buffer/widget" }
window = { path = "libs/nitrogen/system/window" }
world = { path = "libs/nitrogen/wgpu-buffer/world" }
xt = { path = "libs/asset/xt" }
