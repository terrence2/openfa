[package]
name = "openfa"
version = "0.0.0"
authors = ["Terrence Cole <terrence.d.cole@gmail.com>"]
edition = "2018"

[workspace]
members = [
    "apps/dump-asm",
    "apps/dump-lay",
    "apps/dump-lib",
    "apps/dump-m",
    "apps/dump-mm",
    "apps/dump-pal",
    "apps/dump-pe",
    "apps/dump-pic",
    "apps/dump-sh",
    "apps/dump-t2",
    "apps/dump-xt",
    "apps/pack-pic",

    "libs/asset/dlg",
    "libs/asset/fnt",
    "libs/asset/jt",
    "libs/asset/lay",
    "libs/asset/lib",
    "libs/asset/mmm",
    "libs/asset/mnu",
    "libs/asset/nt",
    "libs/asset/ot",
    "libs/asset/pal",
    "libs/asset/pic",
    "libs/asset/pt",
    "libs/asset/sh",
    "libs/asset/t2",
    "libs/asset/xt",

    "libs/galaxy",

    "libs/wgpu-buffer/font_fnt",
    "libs/wgpu-buffer/ofa_groups",
    "libs/wgpu-buffer/pic_uploader",
    "libs/wgpu-buffer/shape_chunk",
    "libs/wgpu-buffer/shape_instance",
    "libs/wgpu-buffer/t2_tile_set",

    "libs/util/i386",
    "libs/util/lzss",
    "libs/util/peff",
    "libs/util/pkware",
    "libs/util/reverse",
]

# Emit debugging symbols for tracing
[profile.release]
debug = true

# Need profile-overrides from nightly
# The external 'image' crate is extremely slow with optimizations.
# The internal 'pkware' crate is also extremly slow without opt 1+.
#[profile.dev.overrides.image]
#opt-level = 3
#[profile.dev.overrides.pkware]
#opt-level = 2

[dependencies]
chrono = "^ 0.4"
anyhow = { version = "^ 1", features = ["backtrace"] }
env_logger = "^ 0.7"
image = "^ 0.23"
legion = "^ 0.4"
log = "^ 0.4"
nalgebra = "^ 0.29"
parking_lot = "^ 0.11"
paste = "^ 1"
platform-dirs = "^ 0.3"
structopt = "^ 0.3"
terminal_size = "^ 0.1"
tokio = { version = "^ 1.0", features = ["rt-multi-thread", "macros", "io-util", "fs", "sync"] }
winit = { version = "^ 0.24", features = ["web-sys"] }
absolute_unit = { path = "libs/nitrogen/util/absolute_unit" }
animate = { path = "libs/nitrogen/util/animate" }
atmosphere = { path = "libs/nitrogen/wgpu-buffer/atmosphere" }
camera = { path = "libs/nitrogen/sim/camera" }
catalog = { path = "libs/nitrogen/system/catalog" }
composite = { path = "libs/nitrogen/wgpu-buffer/composite" }
fnt = { path = "libs/asset/fnt" }
font_fnt = { path = "libs/wgpu-buffer/font_fnt" }
fullscreen = { path = "libs/nitrogen/wgpu-buffer/fullscreen" }
geodesy = { path = "libs/nitrogen/util/geodesy" }
global_data = { path = "libs/nitrogen/wgpu-buffer/global_data" }
gpu = { path = "libs/nitrogen/system/gpu" }
input = { path = "libs/nitrogen/system/input" }
nitrous = { path = "libs/nitrogen/util/nitrous" }
nitrous_injector = { path = "libs/nitrogen/util/nitrous_injector" }
orrery = { path = "libs/nitrogen/sim/orrery" }
physical_constants = { path = "libs/nitrogen/util/physical_constants" }
stars = { path = "libs/nitrogen/wgpu-buffer/stars" }
terrain = { path = "libs/nitrogen/wgpu-buffer/terrain" }
ui = { path = "libs/nitrogen/wgpu-buffer/ui" }
widget = { path = "libs/nitrogen/wgpu-buffer/widget" }
world = { path = "libs/nitrogen/wgpu-buffer/world" }
galaxy = { path = "libs/galaxy" }
lib = { path = "libs/asset/lib" }
mmm = { path = "libs/asset/mmm" }
pal = { path = "libs/asset/pal" }
shape_instance = { path = "libs/wgpu-buffer/shape_instance" }
t2_tile_set = { path = "libs/wgpu-buffer/t2_tile_set" }
window = { path = "libs/nitrogen/system/window" }
xt = { path = "libs/asset/xt" }
